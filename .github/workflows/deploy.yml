name: Deploy Frontend

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: codespace-editor-frontend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create .env.production from GitHub Secret
      run: |
        echo "${{ secrets.REACT_ENV_PRODUCTION }}" > .env.production

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }} .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}

    - name: Prepare SSH Bastion tunnel
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.BASTION_PRIVATE_KEY }}" | base64 -d > ~/.ssh/bastion.pem
        chmod 600 ~/.ssh/bastion.pem
    
        echo "Host ec2" >> ~/.ssh/config
        echo "  HostName ${{ secrets.EC2_PRIVATE_IP }}" >> ~/.ssh/config
        echo "  User ${{ secrets.EC2_USER }}" >> ~/.ssh/config
        echo "  IdentityFile ~/.ssh/bastion.pem" >> ~/.ssh/config
        echo "  ProxyCommand ssh -i ~/.ssh/bastion.pem -o StrictHostKeyChecking=no -W %h:%p ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}" >> ~/.ssh/config

    - name: Deploy to EC2 via Bastion
      run: |
        ssh -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -i ~/.ssh/bastion.pem \
            -o ProxyCommand="ssh -i ~/.ssh/bastion.pem -o StrictHostKeyChecking=no -W %h:%p ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}" \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_PRIVATE_IP }} -T << 'EOSSH'
    
          set -e
    
          # Pull and run the Docker container
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          docker stop frontend || true && docker rm frontend || true
          docker run -d --name frontend -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
    
        EOSSH
